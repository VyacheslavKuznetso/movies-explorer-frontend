{"ast":null,"code":"import React from'react';import'./App.css';import{Routes,Route,useNavigate,Navigate}from'react-router-dom';import{useEffect,useState}from'react';import{AppContext,MenuContext,LoggedInContext,activeLinkContext}from'../../contexts/CurrentUserContext';import Header from'../Header/Header';import Main from'../Main/Main';import Footer from'../Footer/Footer';import PopupMenu from'../PopupMenu/PopupMenu';import Movies from'../Movies/Movies';import ProtectedRoute from'../ProtectedRoute';import PageNotFound from'../PageNotFound/PageNotFound';import Profile from'../Profile/Profile';import Register from'../Register/Register';import Login from'../Login/Login';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const body=document.body;const[isPopupMenuOpen,setPopupMenuOpen]=useState(false);const[currentUser,setCurrentUser]=useState({name:'Вячеслав',email:'pochta@yandex.ru'});const[loggedIn,setLoggedIn]=useState(false);const[currentPath,setCurrentPath]=useState(window.location.pathname);const toggleBurger=()=>{setPopupMenuOpen(!isPopupMenuOpen);if(isPopupMenuOpen){body.classList.remove('overflow');}else{body.classList.add('overflow');}};const getInitialActiveLink=()=>{setCurrentPath(window.location.pathname);// Определить, какой пункт активен в зависимости от текущего пути\nif(currentPath==='/movies'){return 1;}else if(currentPath==='/saved-movies'){return 2;}else if(currentPath==='/profile'){return 3;}else{return 0;}};const[activeLink,setActiveLink]=useState(getInitialActiveLink);const handleLinkClick=index=>{setActiveLink(index);// Сохраняем значение в localStorage при каждом клике на ссылку\nlocalStorage.setItem('activeLink',index);setPopupMenuOpen(false);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(activeLinkContext.Provider,{value:activeLink,children:/*#__PURE__*/_jsx(MenuContext.Provider,{value:isPopupMenuOpen,children:/*#__PURE__*/_jsx(AppContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsx(LoggedInContext.Provider,{value:loggedIn,children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{toggleBurger:toggleBurger,handleLinkClick:handleLinkClick}),/*#__PURE__*/_jsx(Main,{}),/*#__PURE__*/_jsx(Footer,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/movies\",element:/*#__PURE__*/_jsxs(ProtectedRoute,{children:[/*#__PURE__*/_jsx(Header,{toggleBurger:toggleBurger,handleLinkClick:handleLinkClick}),/*#__PURE__*/_jsx(Movies,{}),/*#__PURE__*/_jsx(Footer,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/saved-movies\",element:/*#__PURE__*/_jsxs(ProtectedRoute,{children:[/*#__PURE__*/_jsx(Header,{toggleBurger:toggleBurger,handleLinkClick:handleLinkClick}),/*#__PURE__*/_jsx(Movies,{}),/*#__PURE__*/_jsx(Footer,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsxs(ProtectedRoute,{children:[/*#__PURE__*/_jsx(Header,{toggleBurger:toggleBurger,handleLinkClick:handleLinkClick}),/*#__PURE__*/_jsx(Profile,{setLoggedIn:setLoggedIn})]})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(Register,{handleLinkClick:handleLinkClick})}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",element:/*#__PURE__*/_jsx(Login,{handleLinkClick:handleLinkClick})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(PageNotFound,{})})]}),/*#__PURE__*/_jsx(PopupMenu,{handleLinkClick:handleLinkClick})]})})})})})});}export default App;","map":{"version":3,"names":["React","Routes","Route","useNavigate","Navigate","useEffect","useState","AppContext","MenuContext","LoggedInContext","activeLinkContext","Header","Main","Footer","PopupMenu","Movies","ProtectedRoute","PageNotFound","Profile","Register","Login","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","body","document","isPopupMenuOpen","setPopupMenuOpen","currentUser","setCurrentUser","name","email","loggedIn","setLoggedIn","currentPath","setCurrentPath","window","location","pathname","toggleBurger","classList","remove","add","getInitialActiveLink","activeLink","setActiveLink","handleLinkClick","index","localStorage","setItem","children","Provider","value","className","path","element"],"sources":["/Users/book/Desktop/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { AppContext, MenuContext, LoggedInContext, activeLinkContext } from '../../contexts/CurrentUserContext';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport PopupMenu from '../PopupMenu/PopupMenu';\nimport Movies from '../Movies/Movies';\nimport ProtectedRoute from '../ProtectedRoute';\nimport PageNotFound from '../PageNotFound/PageNotFound';\nimport Profile from '../Profile/Profile';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\n\nfunction App() {\n  const body = document.body;\n\n  const [isPopupMenuOpen, setPopupMenuOpen] = useState(false);\n\n\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Вячеслав',\n    email: 'pochta@yandex.ru'\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n\n\n  const toggleBurger = () => {\n    setPopupMenuOpen(!isPopupMenuOpen);\n    if (isPopupMenuOpen) {\n      body.classList.remove('overflow');\n    } else {\n      body.classList.add('overflow');\n    }\n  }\n\n  const getInitialActiveLink = () => {\n    setCurrentPath(window.location.pathname)\n    // Определить, какой пункт активен в зависимости от текущего пути\n    if (currentPath === '/movies') {\n      return 1;\n    } else if (currentPath === '/saved-movies') {\n      return 2;\n    } else if (currentPath === '/profile') {\n      return 3;\n    } else {\n      return 0;\n    }\n  };\n\n  const [activeLink, setActiveLink] = useState(getInitialActiveLink);\n\n  const handleLinkClick = (index) => {\n    setActiveLink(index);\n    // Сохраняем значение в localStorage при каждом клике на ссылку\n    localStorage.setItem('activeLink', index);\n    setPopupMenuOpen(false);\n  };\n\n\n  return (\n    <>\n      <activeLinkContext.Provider value={activeLink}>\n        <MenuContext.Provider value={isPopupMenuOpen}>\n          <AppContext.Provider value={currentUser}>\n            <LoggedInContext.Provider value={loggedIn}>\n              <div className='page'>\n                <Routes>\n                  <Route path='/' element={\n                    <>\n                      <Header toggleBurger={toggleBurger} handleLinkClick={handleLinkClick} />\n                      <Main />\n                      <Footer />\n                    </>\n                  } />\n                  <Route path='/movies' element={\n                    <ProtectedRoute>\n                      <Header toggleBurger={toggleBurger} handleLinkClick={handleLinkClick} />\n                      <Movies />\n                      <Footer />\n                    </ProtectedRoute>\n                  } />\n                  <Route path='/saved-movies' element={\n                    <ProtectedRoute>\n                      <Header toggleBurger={toggleBurger} handleLinkClick={handleLinkClick} />\n                      <Movies />\n                      <Footer />\n                    </ProtectedRoute>\n                  } />\n                  <Route path='/profile' element={\n                    <ProtectedRoute>\n                      <Header toggleBurger={toggleBurger} handleLinkClick={handleLinkClick} />\n                      <Profile setLoggedIn={setLoggedIn} />\n                    </ProtectedRoute>\n                  } />\n                  <Route path='/signup' element={\n                    <Register handleLinkClick={handleLinkClick} />\n                  } />\n                  <Route path='/signin' element={\n                    <Login handleLinkClick={handleLinkClick} />\n                  } />\n                  <Route path='*' element={\n                    <PageNotFound />\n                  } />\n                </Routes>\n                <PopupMenu handleLinkClick={handleLinkClick} />\n              </div>\n            </LoggedInContext.Provider>\n          </AppContext.Provider>\n        </MenuContext.Provider>\n      </activeLinkContext.Provider>\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}