{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport function useFormWithValidation() {\n  _s();\n  // Состояние для хранения значений полей формы\n  const [values, setValues] = useState({});\n  // Состояние для хранения ошибок валидации полей формы\n  const [errors, setErrors] = useState({});\n  // Состояние, указывающее на валидность всей формы\n  const [isValid, setIsValid] = useState(false);\n\n  // Функция-обработчик изменения значений полей формы\n  const handleChange = useCallback(event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    // Обновляем состояние с новым значением поля\n    setValues({\n      ...values,\n      [name]: value\n    });\n    // Обновляем состояние ошибок валидации\n    setErrors({\n      ...errors,\n      [name]: target.validationMessage\n    });\n    // Проверяем валидность всей формы\n    setIsValid(target.closest(\"form\").checkValidity());\n  }, [values, errors]);\n\n  // Функция для сброса значений и ошибок формы\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\n    // Установить новые значения полей\n    setValues(newValues);\n    // Установить новые ошибки валидации\n    setErrors(newErrors);\n    // Установить новую валидность формы\n    setIsValid(newIsValid);\n  }, []);\n\n  // Возвращаем объект, содержащий значения, функцию-обработчик, ошибки и валидность\n  return {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm\n  };\n}\n_s(useFormWithValidation, \"Z0k3L27+CRWFsSdIxl1jh9oAXec=\");","map":{"version":3,"names":["useState","useCallback","useFormWithValidation","_s","values","setValues","errors","setErrors","isValid","setIsValid","handleChange","event","target","name","value","validationMessage","closest","checkValidity","resetForm","newValues","newErrors","newIsValid"],"sources":["/Users/book/Desktop/movies-explorer-frontend/src/components/useFormWithValidation/useFormWithValidation.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport function useFormWithValidation() {\n  // Состояние для хранения значений полей формы\n  const [values, setValues] = useState({});\n  // Состояние для хранения ошибок валидации полей формы\n  const [errors, setErrors] = useState({});\n  // Состояние, указывающее на валидность всей формы\n  const [isValid, setIsValid] = useState(false);\n\n  // Функция-обработчик изменения значений полей формы\n  const handleChange = useCallback((event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    // Обновляем состояние с новым значением поля\n    setValues({ ...values, [name]: value });\n    // Обновляем состояние ошибок валидации\n    setErrors({ ...errors, [name]: target.validationMessage });\n    // Проверяем валидность всей формы\n    setIsValid(target.closest(\"form\").checkValidity());\n  }, [values, errors]);\n\n  // Функция для сброса значений и ошибок формы\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      // Установить новые значения полей\n      setValues(newValues);\n      // Установить новые ошибки валидации\n      setErrors(newErrors);\n      // Установить новую валидность формы\n      setIsValid(newIsValid);\n    },\n    []\n  );\n\n  // Возвращаем объект, содержащий значения, функцию-обработчик, ошибки и валидность\n  return { values, handleChange, errors, isValid, resetForm };\n}\n\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC;EACA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC;EACA,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMU,YAAY,GAAGT,WAAW,CAAEU,KAAK,IAAK;IAC1C,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3B,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;IACxB,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK;;IAE1B;IACAT,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACS,IAAI,GAAGC;IAAM,CAAC,CAAC;IACvC;IACAP,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACO,IAAI,GAAGD,MAAM,CAACG;IAAkB,CAAC,CAAC;IAC1D;IACAN,UAAU,CAACG,MAAM,CAACI,OAAO,CAAC,MAAM,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACb,MAAM,EAAEE,MAAM,CAAC,CAAC;;EAEpB;EACA,MAAMY,SAAS,GAAGjB,WAAW,CAC3B,CAACkB,SAAS,GAAG,CAAC,CAAC,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAEC,UAAU,GAAG,KAAK,KAAK;IACtD;IACAhB,SAAS,CAACc,SAAS,CAAC;IACpB;IACAZ,SAAS,CAACa,SAAS,CAAC;IACpB;IACAX,UAAU,CAACY,UAAU,CAAC;EACxB,CAAC,EACD,EACF,CAAC;;EAED;EACA,OAAO;IAAEjB,MAAM;IAAEM,YAAY;IAAEJ,MAAM;IAAEE,OAAO;IAAEU;EAAU,CAAC;AAC7D;AAACf,EAAA,CArCeD,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}